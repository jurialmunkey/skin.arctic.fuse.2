<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <include name="Hub_Slide_Group_OnWidgets">
        <animation effect="slide" time="400" end="0" start="0,$PARAM[posy]" tween="quadratic" easing="out" reversible="false" condition="$PARAM[condition]">Conditional</animation>
        <animation effect="slide" time="400" end="0,$PARAM[posy]" start="0" tween="quadratic" easing="out" reversible="false" condition="!$PARAM[condition]">Conditional</animation>
    </include>

    <include name="Hub_Slide_Spotlight_OnWidgets">
        <animation effect="slide" time="400" end="0" start="0,-hub_group_fanartspotlight_s" tween="quadratic" easing="out" reversible="false" condition="!$PARAM[condition]">Conditional</animation>
        <animation effect="slide" time="400" end="0,-hub_group_fanartspotlight_s" start="0" tween="quadratic" easing="out" reversible="false" condition="$PARAM[condition]">Conditional</animation>
    </include>

    <include name="Hub_Slide_Spotlight_OnFanart">
        <animation effect="slide" start="0" end="0,hub_group_fanartspotlight_s" time="400" tween="quadratic" reversible="false" condition="$EXP[Exp_Hubs_Spotlight_SlideDown]">Conditional</animation>
        <animation effect="slide" end="0" start="0,hub_group_fanartspotlight_s" time="400" tween="quadratic" reversible="false" condition="!$EXP[Exp_Hubs_Spotlight_SlideDown]">Conditional</animation>
    </include>

    <include name="Hub_Submenu_List_Definition_Content">
        <onfocus>SetProperty(TMDbHelper.WidgetContainer,$PARAM[submenu_widget_id],$PARAM[window_id])</onfocus>

        <!-- Reset Widget Group Position -->
        <include content="Action_Widgets_ResetPosition_OnFocus">
            <param name="condition">Container(400).HasPrevious</param>
        </include>

        <visible>Container($PARAM[id]).IsUpdating | !Integer.IsEqual(Container($PARAM[id]).NumItems,0)</visible>
    </include>

    <include name="Hub_Categories_Spotlight_Slide_Animation">
        <top>$PARAM[top]</top>
        <animation effect="slide" start="0" end="0,$PARAM[y]" reversible="false" time="400" tween="quadratic" condition="$EXP[Exp_Hubs_Categories_SlideDown]">Conditional</animation>
        <animation effect="slide" start="0,$PARAM[y]" end="0" reversible="false" time="400" tween="quadratic" condition="!$EXP[Exp_Hubs_Categories_SlideDown]">Conditional</animation>
    </include>
    <include name="Hub_Categories_Spotlight_Slide">
        <top>$PARAM[top]</top>
        <include content="Hub_Categories_Spotlight_Slide_Animation">
            <param name="y">$PARAM[y]</param>
        </include>
    </include>

    <include name="Hub_Submenu_List">
        <param name="hidden_button">List_ButtonMenu_Row_HiddenButton_View</param>
        <definition>
            <include content="Categories_Selector">
                <param name="id">$PARAM[id]</param>
                <param name="window_id">$PARAM[window_id]</param>
                <param name="font">font_mini</param>
                <param name="color_fo">main_fg_30</param>
                <param name="color_nf">main_fg_30</param>
                <param name="hidden_button">$PARAM[hidden_button]</param>
                <param name="hidden_button_prefix">$PARAM[hidden_button_prefix]</param>
                <param name="submenu_widget_id">$PARAM[submenu_widget_id]</param>
                <param name="slide">True</param>
                <param name="slide_id">3002</param>

                <include content="Hub_Submenu_List_Definition_Content">
                    <param name="submenu_widget_id">$PARAM[submenu_widget_id]</param>
                    <param name="window_id">$PARAM[window_id]</param>
                    <param name="id">$PARAM[id]</param>
                </include>

                <onback>300</onback>
                <top>0</top>
                <onfocus>ClearProperty(Background.ShowOverlay,Home)</onfocus>
                <onfocus>ClearProperty(Background.HideArtwork)</onfocus>
                <nested />
            </include>
        </definition>
    </include>

    <include name="Hub_Submenu_Group">
        <control type="grouplist" id="3002">
            <top>hub_submenuwidget_t</top>
            <height>hub_submenuwidget_h</height>
            <left>40</left>
            <orientation>horizontal</orientation>
            <onup>400</onup>
            <onback>300</onback>
            <ondown>330</ondown>
            <itemgap>-800</itemgap>
            <include content="Hub_Slide_Spotlight_OnWidgets">
                <param name="condition">[[String.IsEmpty(Window.Property(Slide.WidgetContainer)) | [Integer.IsEqual(Window.Property(Slide.WidgetContainer),300) | Control.HasFocus(300)]] + !Skin.HasSetting(Hub.$PARAM[window_id].DisableSpotlight)]</param>
            </include>
            <nested />
        </control>
    </include>

    <include name="Hub_Menu_Group">
        <param name="widgets_only">false</param>
        <definition>
            <control type="group">
                <include content="Hub_Slide_Group_OnWidgets" condition="$PARAM[widgets_only]">
                    <param name="posy">hub_info_group_widgetup_s</param>
                    <param name="condition">false</param>
                </include>
                <include content="Hub_Slide_Group_OnWidgets" condition="![$PARAM[widgets_only]]">
                    <param name="posy">hub_group_widgetup_s</param>
                    <param name="condition">[[String.IsEmpty(Window.Property(Slide.WidgetContainer)) | [Integer.IsEqual(Window.Property(Slide.WidgetContainer),300) | Control.HasFocus(300)]] + !Skin.HasSetting(Hub.$PARAM[window_id].DisableSpotlight)]</param>
                </include>

                <nested />
            </control>
        </definition>
    </include>

    <include name="Hub_Widget_Splash">
        <param name="condition">false</param>
        <param name="label">$LOCALIZE[31427] [LOWERCASE]$LOCALIZE[31103][/LOWERCASE]</param>
        <param name="busyspinner">true</param>
        <definition>
            <control type="group">
                <visible>$PARAM[condition]</visible>
                <include>Background_StartUp</include>
                <include>Object_StartUp_Logo</include>
                <control type="label">
                    <centertop>610</centertop>
                    <height>40</height>
                    <aligny>center</aligny>
                    <align>center</align>
                    <textcolor>main_logo</textcolor>
                    <label>$PARAM[label]...</label>
                </control>
                <control type="group">
                    <centertop>750</centertop>
                    <centerleft>50%</centerleft>
                    <height>120</height>
                    <width>120</width>
                    <control type="image">
                        <include content="Dimension_Padding">
                            <param name="pad">-40</param>
                        </include>
                        <bordersize>40</bordersize>
                        <bordertexture colordiffuse="shadow_hard">shadows/circle_120-shadow-40.png</bordertexture>
                        <texture colordiffuse="main_fg_100">diffuse/circle_120.png</texture>
                    </control>
                    <control type="image">
                        <bordersize>4</bordersize>
                        <aspectratio scalediffuse="false">scale</aspectratio>
                        <texture diffuse="diffuse/circle_120.png">$VAR[Image_ProfileThumb]</texture>
                    </control>
                </control>
                <include content="Furniture_Busy" condition="$PARAM[busyspinner]">
                    <param name="hasspinner">true</param>
                    <param name="spinspinner">true</param>
                    <param name="spinnervisible">[!Window.IsActive(DialogVolumeBar.xml) | Player.Muted]</param>
                    <param name="icon">special://skin/extras/icons/kodi.png</param>
                    <param name="haslabel">false</param>
                </include>
                <!-- <control type="group">
                    <centertop>750</centertop>
                    <height>80</height>
                    <include content="Object_BusySpinner">
                        <param name="colordiffuse">main_fg</param>
                        <param name="haslabel">false</param>
                    </include>
                </control> -->
            </control>
        </definition>
    </include>

    <include name="Hub_SpotlightFanart">
        <control type="image">
            <aspectratio>scale</aspectratio>
            <fadetime>background_fadetime</fadetime>
            <texture background="true">$VAR[Image_FullscreenWidget_Artwork]</texture>
            <include>Background_NotVideo</include>
            <!-- <include content="Animation_Fade_In">
                <param name="type">WindowOpen</param>
            </include>
            <include content="Animation_Fade_Out">
                <param name="type">WindowClose</param>
            </include> -->
            <animation effect="fade" start="0" end="100" time="background_fadetime" delay="background_fadetime">Visible</animation>
            <animation effect="fade" start="100" end="0" time="background_fadetime" delay="background_fadetime">Hidden</animation>
            <visible>$EXP[Exp_Hubs_Spotlight_SlideDown]</visible>
        </control>
    </include>

    <include name="Hub_Menu_Slide">
        <param name="condition">$EXP[Exp_HomeMenu_HasFocus]</param>
        <definition>

            <!-- Full Panels -->
            <!-- In/Out Animation -->
            <animation effect="slide" tween="cubic" easing="out" time="400" start="0" end="view_menu_main" reversible="false" condition="[$PARAM[condition]] + $EXP[Exp_FullPanelWindows]">Conditional</animation>
            <animation effect="slide" tween="cubic" easing="out" time="400" start="view_menu_main" end="0" reversible="false" condition="![$PARAM[condition]] + $EXP[Exp_FullPanelWindows]">Conditional</animation>

            <!-- Open/Close from None Panel Windows -->
            <animation effect="slide" tween="cubic" easing="out" time="400" start="-view_menu_main" end="0" reversible="false" condition="[$PARAM[condition]] + $EXP[Exp_NonePanelWindows_Prev] + $EXP[Exp_FullPanelWindows]">WindowOpen</animation>
            <animation effect="slide" tween="cubic" easing="out" time="400" start="0" end="-view_menu_main" reversible="false" condition="[$PARAM[condition]] + $EXP[Exp_NonePanelWindows_Next] + $EXP[Exp_FullPanelWindows]">WindowClose</animation>

            <!-- Mini Panels -->
            <!-- In/Out Animation -->
            <animation effect="slide" tween="cubic" easing="out" time="400" start="0" end="view_menu_mini" reversible="false" condition="[$PARAM[condition]] + $EXP[Exp_MiniPanelWindows]">Conditional</animation>
            <animation effect="slide" tween="cubic" easing="out" time="400" start="view_menu_mini" end="0" reversible="false" condition="![$PARAM[condition]] + $EXP[Exp_MiniPanelWindows]">Conditional</animation>

            <!-- Open/Close to/from None Panel Window -->
            <animation effect="slide" tween="cubic" easing="out" time="400" start="-view_menu_mini" end="0" reversible="false" condition="[$PARAM[condition]] + $EXP[Exp_NonePanelWindows_Prev] + $EXP[Exp_MiniPanelWindows]">WindowOpen</animation>
            <animation effect="slide" tween="cubic" easing="out" time="400" start="0" end="-view_menu_mini" reversible="false" condition="[$PARAM[condition]] + $EXP[Exp_NonePanelWindows_Next] + $EXP[Exp_MiniPanelWindows]">WindowClose</animation>

            <!-- Open/Close to/from Full Panel Window -->
            <animation effect="slide" tween="cubic" easing="out" time="400" start="view_menu_comp" end="0" reversible="false" condition="[$PARAM[condition]] + $EXP[Exp_FullPanelWindows_Prev] + $EXP[Exp_MiniPanelWindows]">WindowOpen</animation>
            <animation effect="slide" tween="cubic" easing="out" time="400" start="0" end="view_menu_comp" reversible="false" condition="[$PARAM[condition]] + $EXP[Exp_FullPanelWindows_Next] + $EXP[Exp_MiniPanelWindows]">WindowClose</animation>

        </definition>
    </include>

    <include name="Hub_Menu_Fade">
        <param name="condition">$EXP[Exp_HomeMenu_HasFocus]</param>
        <definition>

            <!-- Full Panels -->
            <!-- Open/Close to/from None or Mini Panel Windows -->
            <include content="Animation_Fade_In">
                <param name="type">WindowOpen</param>
                <param name="condition">[$PARAM[condition]] + [$EXP[Exp_NonePanelWindows_Prev] | $EXP[Exp_MiniPanelWindows_Prev]] + $EXP[Exp_FullPanelWindows]</param>
            </include>
            <include content="Animation_Fade_Out">
                <param name="type">WindowClose</param>
                <param name="condition">[$PARAM[condition]] + [$EXP[Exp_NonePanelWindows_Next] | $EXP[Exp_MiniPanelWindows_Next]] + $EXP[Exp_FullPanelWindows]</param>
            </include>

            <!-- Mini Panels -->
            <!-- Open/Close to/from None or Full Panel Window -->
            <include content="Animation_Fade_In">
                <param name="type">WindowOpen</param>
                <param name="condition">[$PARAM[condition]] + [$EXP[Exp_NonePanelWindows_Prev] | $EXP[Exp_FullPanelWindows_Prev]] + $EXP[Exp_MiniPanelWindows]</param>
            </include>
            <include content="Animation_Fade_Out">
                <param name="type">WindowClose</param>
                <param name="condition">[$PARAM[condition]] + [$EXP[Exp_NonePanelWindows_Next] | $EXP[Exp_FullPanelWindows_Next]] + $EXP[Exp_MiniPanelWindows]</param>
            </include>

        </definition>
    </include>

    <include name="Hub_Top_Bezier">
        <!-- <control type="image">
            <include>Hub_Top_Animation</include>
            <height>400</height>
            <texture colordiffuse="99ffffff">common/dim-top-bezier.png</texture>
        </control> -->
        <control type="image">
            <left>0</left>
            <top>0</top>
            <height>50%</height>
            <width>100%</width>
            <aspectratio>stretch</aspectratio>
            <texture colordiffuse="main_bg_70" flipx="true">shadows/cornerspot.png</texture>
            <include>Hub_Top_Animation</include>
        </control>
    </include>

    <include name="Hub_Controls">
        <param name="fullscreen_content">$VAR[Path_Spotlight_Fallback_Content]</param>
        <param name="fullscreen_target">$VAR[Path_Spotlight_Fallback_Target]</param>
        <param name="fullscreen_sortby">$VAR[Path_Spotlight_Fallback_SortBy]</param>
        <param name="widgets_only">false</param>
        <param name="include">Hub_Standard</param>
        <definition>

            <include content="Object_Hidden_Button">
                <param name="id">307</param>
                <onfocus>SetFocus(303)</onfocus>
                <onfocus>ActivateWindow(1170)</onfocus>
            </include>

            <include>View_Bumper</include>
            <include condition="![$PARAM[widgets_only]] + !Skin.HasSetting(Hub.$PARAM[window_id].DisableSpotlight)">Spotlight_Fallback_Slideshow</include>
            <include>Defs_TMDbHelper_Loader</include>

            <include content="Background_Main" condition="![$PARAM[widgets_only]] + !Skin.HasSetting(Hub.$PARAM[window_id].DisableSpotlight)">
                <param name="include_layer">Hub_SpotlightFanart</param>
            </include>
            <include condition="![![$PARAM[widgets_only]] + !Skin.HasSetting(Hub.$PARAM[window_id].DisableSpotlight)]">Background_Main</include>
            <include>Background_Transition</include>
            <include condition="![$PARAM[widgets_only]]">Hub_Top_Bezier</include>

            <control type="group">
                <include>Hub_Menu_Slide</include>

                <control type="group">
                    <include>Animation_Group_Bumper</include>
                    <include content="Hub_Categories">
                        <param name="categories">$PARAM[categories]</param>
                        <param name="window_id">$PARAM[window_id]</param>
                        <param name="widgets_only">false</param>
                    </include>
                    <!-- Hub Widgets Group -->
                    <control type="group" id="320">
                        <include>Animation_View_WindowChange</include>
                        <include condition="![$PARAM[widgets_only]] + !Skin.HasSetting(Hub.$PARAM[window_id].DisableSpotlight)">Hub_Slide_Spotlight_OnFanart</include>
                        <include content="Hub_Spotlight" condition="![$PARAM[widgets_only]] + !Skin.HasSetting(Hub.$PARAM[window_id].DisableSpotlight)">
                            <param name="window_id">$PARAM[window_id]</param>
                        </include>
                        <include content="Spotlight_List" condition="![$PARAM[widgets_only]] + !Skin.HasSetting(Hub.$PARAM[window_id].DisableSpotlight)">
                            <param name="window_id">$PARAM[window_id]</param>
                            <param name="sortby">$PARAM[fullscreen_sortby]</param>
                            <param name="sortorder">$PARAM[fullscreen_sortorder]</param>
                            <param name="target">$PARAM[fullscreen_target]</param>
                            <param name="limit">$PARAM[fullscreen_limit]</param>
                            <param name="browse">never</param>
                            <param name="content">$PARAM[fullscreen_content]</param>
                            <visible>String.IsEmpty(Container(300).ListItem.Property(spotlight_path))</visible>
                            <visible>String.IsEmpty(Container(303).ListItem.Property(spotlight_path))</visible>
                        </include>
                        <include content="$PARAM[include]" condition="![$PARAM[widgets_only]]">
                            <param name="categories">$PARAM[categories]</param>
                            <param name="window_id">$PARAM[window_id]</param>
                            <param name="widgets_only">false</param>
                        </include>
                        <include content="Hub_Widgets_Only" condition="$PARAM[widgets_only]">
                            <param name="window_id">$PARAM[window_id]</param>
                            <param name="widgets_include">skinvariables-$PARAM[categories]-widgets</param>
                        </include>
                        <include condition="![$PARAM[widgets_only]] + !Skin.HasSetting(Hub.$PARAM[window_id].DisableSpotlight)">Spotlight_Info</include>

                    </control>
                    <!-- Furniture -->
                    <control type="group">
                        <visible>![$PARAM[widgets_only]]</visible>
                        <visible>!$EXP[Exp_InfoDialogs]</visible>
                        <control type="group">
                            <!-- <visible>Integer.IsEqual(Container(300).NumItems,0)</visible> -->
                            <include>Furniture_Top_Left</include>
                        </control>
                        <!-- <control type="group">
                            <visible>!Integer.IsEqual(Container(300).NumItems,0)</visible>
                            <control type="group">
                                <include content="Hub_Top_Animation">
                                    <param name="mod">!</param>
                                </include>
                                <include content="Furniture_Top_Left">
                                    <param name="label">$INFO[Container(300).ListItem.Label]</param>
                                </include>
                            </control>

                        </control> -->
                    </control>


                </control>

                <!-- SideMenu -->
                <include content="Home_Menu" condition="Window.IsVisible(Home)">
                    <param name="window_id">$PARAM[window_id]</param>
                    <param name="onlist">400</param>
                </include>
            </control>

            <control type="group">
                <visible>!$EXP[Exp_InfoDialogs]</visible>
                <include>Furniture_Top_Right</include>
                <include>Furniture_Bottom_Right</include>
            </control>

            <!-- Plot Dialog Overlay -->
            <include>View_Dialog_Plot</include>

            <include content="Hub_Widget_Splash" condition="Skin.HasSetting(Startup.WaitForLoad) + Window.IsVisible(Home)">
                <param name="condition">System.HasAlarm(SplashTimeOut) + Integer.IsEqual(Container(100601).NumItems,0) + Container(100601).IsUpdating</param>
            </include>
            <include content="Hub_Widget_Splash" condition="Skin.HasSetting(Startup.WaitForLoad) + !Window.IsVisible(Home) + ![$PARAM[widgets_only]] + !Skin.HasSetting(Hub.$PARAM[window_id].DisableSpotlight)">
                <param name="condition">System.HasAlarm(SplashTimeOut) + Integer.IsEqual(Container(301).NumItems,0) + Container(301).IsUpdating</param>
            </include>
            <include content="Hub_Widget_Splash" condition="Skin.HasSetting(Startup.WaitForLoad) + !Window.IsVisible(Home) + ![$PARAM[widgets_only]] + Skin.HasSetting(Hub.$PARAM[window_id].DisableSpotlight)">
                <param name="condition">System.HasAlarm(SplashTimeOut) + Integer.IsEqual(Container(300).NumItems,0) + Container(300).IsUpdating</param>
            </include>
            <include content="Hub_Widget_Splash" condition="Skin.HasSetting(Startup.WaitForLoad) + !Window.IsVisible(Home) + $PARAM[widgets_only]">
                <param name="condition">System.HasAlarm(SplashTimeOut) + Integer.IsEqual(Container(100601).NumItems,0) + Container(100601).IsUpdating</param>
            </include>
        </definition>
    </include>

    <include name="Hub_Top_Animation">
        <param name="condition">[[Integer.IsEqual(Window.Property(TMDbHelper.WidgetContainer),301) + !Integer.IsEqual(Container(300).NumItems,0)] | Control.HasFocus(300)]</param>
        <param name="mod" />
        <definition>
            <include content="Animation_Fade_In">
                <param name="condition">$PARAM[mod][$PARAM[condition]]</param>
            </include>
            <include content="Animation_Fade_Out">
                <param name="condition">![$PARAM[mod][$PARAM[condition]]]</param>
            </include>
        </definition>
    </include>

    <include name="Hub_Widgets_Only">
        <include>Background_Transition</include>
        <control type="group" id="340">
            <include content="Object_Top" condition="Skin.HasSetting(Hub.$PARAM[window_id].EnableDetailedInformation)">
                <param name="top">440</param>
            </include>
            <include content="Object_Bottom" condition="Skin.HasSetting(Hub.$PARAM[window_id].EnableDetailedInformation)">
                <param name="bottom">-440</param>
            </include>
            <include>$PARAM[widgets_include]</include>
        </control>

        <include content="Hub_Widgets_Infopanel" condition="Skin.HasSetting(Hub.$PARAM[window_id].EnableDetailedInformation)">
            <include content="Info_Panel">
                <param name="container">Container.</param>
                <param name="visible">!Integer.IsEqual(Window.Property(TMDBHelper.WidgetContainer),301)</param>
            </include>
        </include>

        <include content="Furniture_Top_Left" condition="Skin.HasSetting(Hub.$PARAM[window_id].EnableDetailedInformation)">
            <param name="label">[CAPITALIZE]$VAR[Label_Header_Main][/CAPITALIZE]</param>
        </include>
    </include>

    <variable name="Hub_Submenu_Content">
        <value condition="!String.IsEmpty(Container(300).ListItem.Property(submenulist_path))">$INFO[Container(300).ListItem.Property(submenulist_path)]</value>
        <value>plugin://script.skinvariables/?info=get_shortcuts_node$INFO[Container(300).ListItem.Property(menu),&amp;menu=,]$INFO[Container(300).ListItem.Property(list),&amp;node=,]$INFO[Container(300).ListItem.Property(skin),&amp;skin=,]$INFO[Window(Home).Property(SkinVariables.ShortcutsNode.Reload),&amp;reload=,]</value>
    </variable>

    <include name="Hub_Standard">
        <include content="Hub_Menu_Group">
            <param name="window_id">$PARAM[window_id]</param>
            <param name="widgets_only">$PARAM[widgets_only]</param>
            <include content="Hub_Submenu_Group">
                <param name="window_id">$PARAM[window_id]</param>
                <include>skinvariables-$PARAM[categories]-submenu</include>
            </include>
        </include>

        <include>skinvariables-$PARAM[categories]-spotlight</include>

        <control type="group" id="340">
            <include>skinvariables-$PARAM[categories]-widgets</include>
        </control>

        <include content="Hub_Widgets_Infopanel">
            <include content="Info_Panel">
                <param name="container">Container.</param>
                <param name="visible">!Integer.IsEqual(Window.Property(TMDBHelper.WidgetContainer),301)</param>
            </include>
        </include>
    </include>
    <include name="Hub_Categories_Definition_Content">

        <!-- Reset Widget Group Position -->
        <!-- <include content="Action_Widgets_ResetPosition_OnFocus">
            <param name="condition">Container(400).HasPrevious | !String.IsEmpty(Window.Property(Widgets.ResetPosition))</param>
        </include> -->

        <include content="Action_Widget_Top">
            <param name="id">300</param>
        </include>

        <ondown condition="Control.IsVisible(311)">311</ondown>
        <ondown condition="!Control.IsVisible(311)">400</ondown>

        <onfocus condition="!Skin.HasSetting(Hub.$PARAM[window_id].DisableSpotlight)">SetProperty(TMDbHelper.WidgetContainer,301,$PARAM[window_id])</onfocus>

        <content>
            <include>skinvariables-$PARAM[categories]-staticitems</include>
        </content>
    </include>

    <include name="Hub_Categories_Definition">
        <include content="Categories_Selector">
            <param name="window_id">$PARAM[window_id]</param>
            <param name="hitrect_x">20</param>
            <param name="hitrect_y">50</param>
            <param name="hitrect_w">1080</param>
            <param name="hitrect_h">100</param>
            <param name="include_five">false</param>
            <param name="hidden_button_prefix">$INFO[Container(300).ListItem.Property(item)]302</param>
            <param name="hidden_button">List_ButtonMenu_Row_HiddenButton_Home_Categories</param>
            <param name="slide">True</param>
            <include content="Hub_Categories_Definition_Content">
                <param name="window_id">$PARAM[window_id]</param>
                <param name="categories">$PARAM[categories]</param>
            </include>
            <left>0</left>
            <onfocus>ClearProperty(Background.ShowOverlay,Home)</onfocus>
            <onfocus>ClearProperty(Background.HideArtwork)</onfocus>
        </include>
    </include>

    <include name="Hub_Categories_Spotlight_Viewline">
        <control type="group">
            <top>hub_spotlight_t</top>
            <height>hub_spotlight_h</height>
            <include content="Animation_Fade_In">
                <param name="condition">Integer.IsEqual(Window.Property(TMDBHelper.WidgetContainer),301)</param>
                <param name="delay">200</param>
            </include>
            <include content="Animation_ConditionalFade">
                <param name="condition">!Integer.IsEqual(Window.Property(TMDBHelper.WidgetContainer),301)</param>
            </include>
            <include content="Info_Viewline">
                <param name="label">$VAR[Label_Spotlight_Name]</param>
                <top>60</top>
            </include>
        </control>
    </include>

    <include name="Hub_Categories">
        <control type="group">
            <visible>!$EXP[Exp_InfoDialogs]</visible>


            <include>Hub_Top_Animation</include>
            <control type="grouplist">
                <left>40</left>
                <orientation>horizontal</orientation>
                <itemgap>40</itemgap>
                <centertop>100</centertop>
                <height>80</height>
                <control type="label">
                    <left>40</left>
                    <label>[CAPITALIZE]$VAR[Label_Header_Main][/CAPITALIZE]</label>
                    <font>font_midi_black</font>
                    <textcolor>00ffffff</textcolor>
                    <width>auto</width>
                    <height>74</height>
                </control>
                <control type="group">
                    <width>2000</width>
                    <include>Animation_View_WindowChangeAnimation</include>
                    <include content="Hub_Categories_Definition">
                        <param name="window_id">$PARAM[window_id]</param>
                        <param name="categories">$PARAM[categories]</param>
                    </include>
                </control>
            </control>

        </control>
    </include>

    <include name="Hub_Spotlight">
        <include content="Hub_Menu_Group">
            <param name="window_id">$PARAM[window_id]</param>
            <include>Hub_Categories_Spotlight_Viewline</include>
            <include content="Spotlight_Main">
                <param name="window_id">$PARAM[window_id]</param>
            </include>
        </include>
    </include>

    <include name="Hub_Widgets_Grouplist_Animation_Slide">
        <animation effect="fade" start="100" end="0" delay="400" time="1" reversible="false">Hidden</animation>
        <animation effect="fade" start="100" end="0" reversible="false" condition="String.IsEmpty(Window.Property(WidgetGroup.Movement)) + ![$PARAM[visible]]">Conditional</animation>
        <include content="Animation_Widgets_Grouplist_Slide_In">
            <param name="posy">-440</param>
            <param name="condition">String.IsEqual(Window.Property(WidgetGroup.Movement),Up) + $PARAM[visible]</param>
        </include>
        <include content="Animation_Widgets_Grouplist_Slide_Out">
            <param name="posy">440</param>
            <param name="condition">String.IsEqual(Window.Property(WidgetGroup.Movement),Up) + ![$PARAM[visible]]</param>
        </include>
        <include content="Animation_Widgets_Grouplist_Slide_In">
            <param name="posy">440</param>
            <param name="condition">String.IsEqual(Window.Property(WidgetGroup.Movement),Down) + $PARAM[visible]</param>
        </include>
        <include content="Animation_Widgets_Grouplist_Slide_Out">
            <param name="posy">-440</param>
            <param name="condition">String.IsEqual(Window.Property(WidgetGroup.Movement),Down) + ![$PARAM[visible]]</param>
        </include>
    </include>

    <include name="Hub_Widgets_Grouplist">
        <definition>
            <control type="grouplist" id="$PARAM[id]">
                <top>hub_widgets_grouplist_t</top>

                <include content="Object_Bottom" condition="![$PARAM[widgets_only] + !Skin.HasSetting(Hub.$PARAM[window_id].EnableDetailedInformation)]">
                    <param name="bottom">hub_infowidgets_grouplist_b</param>
                </include>
                <include content="Object_Bottom" condition="$PARAM[widgets_only] + !Skin.HasSetting(Hub.$PARAM[window_id].EnableDetailedInformation)">
                    <param name="bottom">hub_widgets_grouplist_b</param>
                </include>

                <include condition="![$PARAM[widgets_only]]" content="Hub_Widgets_Grouplist__Def_Layout_Expanded">
                    <param name="window_id">$PARAM[window_id]</param>
                </include>

                <include condition="$PARAM[widgets_only]" content="Hub_Widgets_Grouplist__Def_Layout_Basic">
                    <param name="id">$PARAM[id]</param>
                </include>

                <ondown>3002</ondown>

                <visible>$PARAM[visible]</visible>

                <include content="Hub_Widgets_Grouplist_Animation_Slide" condition="Window.IsVisible(Home)">
                    <param name="visible">$PARAM[visible]</param>
                </include>

                <control type="group" id="$PARAM[bumperid]">
                    <height>widget_tbump_h</height>
                </control>

                <nested />

                <include content="DialogInfo_Widget_EndLine">
                    <param name="id">$PARAM[furnitureid]</param>
                    <param name="widgets_only">[$PARAM[widgets_only] + !Skin.HasSetting(Hub.$PARAM[window_id].EnableDetailedInformation)]</param>
                    <param name="visible">String.IsEmpty(Container(300).ListItem.Property(use_as_widget))</param>
                </include>


            </control>
        </definition>

    </include>

    <include name="Hub_Widgets_Infopanel">
        <param name="visible">True</param>
        <param name="conditional_fade">Window.IsActive(1105)</param>
        <definition>
            <control type="group">
                <width>info_panel_w</width>
                <height>320</height>
                <left>view_pad</left>
                <top>view_top</top>
                <visible>$PARAM[visible]</visible>
                <animation effect="fade" start="100" end="0" condition="$PARAM[conditional_fade]" reversible="false">Conditional</animation>
                <animation effect="fade" start="0" end="100" delay="200" time="200" tween="sine" easing="in" condition="![$PARAM[conditional_fade]]" reversible="false">Conditional</animation>
                <nested />
            </control>
        </definition>
    </include>



    <include name="Hub_Widgets_Grouplist__Def_Layout_Expanded">
        <onup condition="Control.IsVisible(311)">311</onup>
        <onup condition="!Control.IsVisible(311) + Control.IsVisible(300)">300</onup>
        <include content="Hub_Slide_Spotlight_OnWidgets">
            <param name="condition">[[String.IsEmpty(Window.Property(Slide.WidgetContainer)) | [Integer.IsEqual(Window.Property(Slide.WidgetContainer),300) | Control.HasFocus(300)]] + !Skin.HasSetting(Hub.$PARAM[window_id].DisableSpotlight)]</param>
        </include>
    </include>

    <include name="Hub_Widgets_Grouplist__Def_Layout_Basic">
        <include content="Action_Widget_Top">
            <param name="id">$PARAM[id]</param>
        </include>
    </include>
</includes>